/* Do not remove the comments below. It's the markers used by wiredep to inject
   sass dependencies when defined in the bower.json of your dependencies */
// bower:scss
// endbower

html {
  font-size: 16px;
}

*,
*:before,
*:after{
  box-sizing: border-box;
}

// display none
//main, header, .carouselar, .footerThumbnails {
//  display: none;
//}

a {
  color: inherit;
  text-decoration: none;
}

figure {
  margin: 0;
}

.browsehappy {
  margin: .2em 0;
  background: #ccc;
  color: #000;
  padding: .2em 0;
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

img {
  width: 100%;
}

$images: "../assets/images/";
$fonts: "../assets/fonts/";

@font-face {
  font-family: 'poyntertextregular';
  src: url('#{$fonts}poyntertext-bold-webfont.eot');
  src: url('#{$fonts}poyntertext-bold-webfont.eot?#iefix') format('embedded-opentype'),
  url('#{$fonts}poyntertext-bold-webfont.woff2') format('woff2'),
  url('#{$fonts}poyntertext-bold-webfont.woff') format('woff'),
  url('#{$fonts}poyntertext-bold-webfont.ttf') format('truetype'),
  url('#{$fonts}poyntertext-bold-webfont.svg#poyntertextregular') format('svg');
  font-weight: normal;
  font-style: normal;

}

@font-face {
  font-family: 'poyntertextregular';
  src: url('#{$fonts}poyntertext-sansblack-webfont.eot');
  src: url('#{$fonts}poyntertext-sansblack-webfont.eot?#iefix') format('embedded-opentype'),
  url('#{$fonts}poyntertext-sansblack-webfont.woff2') format('woff2'),
  url('#{$fonts}poyntertext-sansblack-webfont.woff') format('woff'),
  url('#{$fonts}poyntertext-sansblack-webfont.ttf') format('truetype'),
  url('#{$fonts}poyntertext-sansblack-webfont.svg#poyntertextregular') format('svg');
  font-weight: normal;
  font-style: normal;

}

@font-face {
  font-family: 'poyntertextregular';
  src: url('#{$fonts}poyntertext-sansbold-webfont.eot');
  src: url('#{$fonts}poyntertext-sansbold-webfont.eot?#iefix') format('embedded-opentype'),
  url('#{$fonts}poyntertext-sansbold-webfont.woff2') format('woff2'),
  url('#{$fonts}poyntertext-sansbold-webfont.woff') format('woff'),
  url('#{$fonts}poyntertext-sansbold-webfont.ttf') format('truetype'),
  url('#{$fonts}poyntertext-sansbold-webfont.svg#poyntertextregular') format('svg');
  font-weight: normal;
  font-style: normal;

}

@font-face {
  font-family: 'poyntertextregular';
  src: url('#{$fonts}poyntertext-sanslight-webfont.eot');
  src: url('#{$fonts}poyntertext-sanslight-webfont.eot?#iefix') format('embedded-opentype'),
  url('#{$fonts}poyntertext-sanslight-webfont.woff2') format('woff2'),
  url('#{$fonts}poyntertext-sanslight-webfont.woff') format('woff'),
  url('#{$fonts}poyntertext-sanslight-webfont.ttf') format('truetype'),
  url('#{$fonts}poyntertext-sanslight-webfont.svg#poyntertextregular') format('svg');
  font-weight: normal;
  font-style: normal;

}

$brand:    #01bf9d;
$brandBkg: #f1f2f7;
$brand2:   #01a185;
$brand3:   #2d3e52;
$brand4:   #ea4b35;

@mixin date() {
  color: $brand;
  font-size: em(12);
  font-style: italic;

}

@mixin tag() {
  display: inline-block;
  position: relative;
  font-size: em(10);
  margin-bottom: 1em;
  margin-left: em(12,12);
  padding: em(5, 12) em(14, 12);
  background: $brand3;
  box-shadow: inset 0 em(1, 12) 0 lighten($brand3, 20%);
  @include border-right-radius(em(5));
  & * {
    text-shadow: 0 em(-1, 12) 0 darken($brand3, 10%);
    color: lighten($brand3, 35%);
  }
  &:before {
    content: "";
    float: left;
    position: absolute;
    top: 0;
    left: em(-12, 12);
    width: 0;
    height: 0;
    border-color: transparent $brand3 transparent transparent;
    border-style: solid;
    border-width: em(12, 12) em(12, 12) em(12, 12) 0;
  }
  &:after {
    content: "";
    position: absolute;
    top: em(10, 12);
    left: 0;
    float: left;
    width: em(4, 12);
    height: em(4, 12);
    -moz-border-radius: em(2, 12);
    -webkit-border-radius: em(2, 12);
    border-radius: em(2, 12);
    background: lighten($brand3, 35%);
    -moz-box-shadow: em(-1, 12) em(-1, 12) em(2, 12) darken($brand3, 30%);
    -webkit-box-shadow: em(-1, 12) em(-1, 12) em(2, 12) darken($brand3, 30%);
    box-shadow: em(-1, 12) em(-1, 12) em(2, 12) darken($brand3, 30%);
  }
  &:hover {
    background: darken($brand3, 10%);
    &:before {
      border-color: transparent darken($brand3, 10%) transparent transparent;
    }
  }
}

// global settings
$susy: (
        debug: (
                image: hide,
                output: overlay,
                toggle: top right
        )
);

// Default map for adding gutter to right
//$mapDefault: layout(12 .25 after);

// custom map for splitting gutter to left and right equally
$map1: layout(12 .25 split);

body {
  background: $brandBkg;
  font-family: 'poyntertextregular', sans-serif;
}

// set main container width and break points
.ms-container {

  @include container();

  @include susy-breakpoint(20em, 6) { // 320px
    // Mobile.
    //color: orangered;
  }

  @include susy-breakpoint(30em, 8) { // 480px
    // Mobile Landscape.
    //color: green;
  }

  @include susy-breakpoint(48em, 10) { // 768px
    // Tablet Portrait.
    @include container(46.875em); // 750px
    //color: yellow;
  }

  @include susy-breakpoint(62em, 12) { //  992px
    //Tablet Landscape & Small Desktop.
    @include container(60.625em); // 970px
    //color: dodgerblue;
    padding: 0 em(15);
    background: #fff;
  }

  @include susy-breakpoint(75em, 12) { // 1200px
    // Large Desktop.
    @include container(73.125em); // 1170px
    //color: mediumpurple;
    padding: 0 em(15);
    background: #fff;
  }

}


/* Do not remove the comments below. It's the markers used by gulp-inject to inject
   all your sass files automatically */
// injector
// endinjector
